// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String   @unique
  email     String   @unique
  username  String   @unique
  firstName String
  lastName  String
  photo     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  events Event[]
  orders Order[]
}

model Event {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String?
  location      String?
  imageUrl      String
  startDateTime DateTime @default(now())
  endDateTime   DateTime @default(now())
  price         String?
  isFree        Boolean? @default(false)
  url           String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  organizer User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String @db.ObjectId

  categories Category[]
  orders     Order[]
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId String @db.ObjectId
}

model Order {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  stripeId    String   @unique
  totalAmount String?  @default("0")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  buyer   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String @db.ObjectId
  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId String @db.ObjectId
}
